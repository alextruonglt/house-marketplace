{"ast":null,"code":"var _jsxFileName = \"/Users/alextruong/Documents/Coding/house-marketplace/src/components/OAuth.js\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { doc, setDoc, getDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebase.config';\nimport { toast } from 'react-toastify';\nimport googleIcon from \"../assets/svg/googleIcon.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OAuth() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const onGoogleClick = async () => {\n    try {\n      const auth = getAuth();\n      const provider = new GoogleAuthProvider();\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n\n      // Check for user\n      const docRef = doc(db, 'users', user.uid);\n      const docSnap = await getDoc(docRef);\n\n      // If user, doesn't exist, create user\n      if (!docSnap.exists()) {\n        await setDoc(doc(db, 'users', user.uid), {\n          name: user.displayName,\n          email: user.email,\n          timestamp: serverTimestamp()\n        });\n      }\n      navigate('/');\n    } catch (error) {\n      toast.error('Could not authorize with Google');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"socialLogin\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Sign \", location.pathname === '/sign-up' ? 'up' : 'in', \" with \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"socialIconDiv\",\n      onClick: onGoogleClick,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"socialIconImg\",\n        src: googleIcon,\n        alt: \"google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(OAuth, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = OAuth;\nexport default OAuth;\nvar _c;\n$RefreshReg$(_c, \"OAuth\");","map":{"version":3,"names":["useLocation","useNavigate","getAuth","signInWithPopup","GoogleAuthProvider","doc","setDoc","getDoc","serverTimestamp","db","toast","googleIcon","jsxDEV","_jsxDEV","OAuth","_s","navigate","location","onGoogleClick","auth","provider","result","user","docRef","uid","docSnap","exists","name","displayName","email","timestamp","error","className","children","pathname","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/alextruong/Documents/Coding/house-marketplace/src/components/OAuth.js"],"sourcesContent":["import { useLocation, useNavigate } from 'react-router-dom'\nimport { getAuth, signInWithPopup, GoogleAuthProvider } from 'firebase/auth'\nimport { doc, setDoc, getDoc, serverTimestamp } from 'firebase/firestore'\nimport { db } from '../firebase.config'\nimport { toast } from 'react-toastify'\nimport googleIcon from '../assets/svg/googleIcon.svg'\n\nfunction OAuth() {\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const onGoogleClick = async () => {\n    try {\n      const auth = getAuth()\n      const provider = new GoogleAuthProvider()\n      const result = await signInWithPopup(auth, provider)\n      const user = result.user\n\n      // Check for user\n      const docRef = doc(db, 'users', user.uid)\n      const docSnap = await getDoc(docRef)\n\n      // If user, doesn't exist, create user\n      if (!docSnap.exists()) {\n        await setDoc(doc(db, 'users', user.uid), {\n          name: user.displayName,\n          email: user.email,\n          timestamp: serverTimestamp(),\n        })\n      }\n      navigate('/')\n    } catch (error) {\n      toast.error('Could not authorize with Google')\n    }\n  }\n\n  return (\n    <div className='socialLogin'>\n      <p>Sign {location.pathname === '/sign-up' ? 'up' : 'in'} with </p>\n      <button className='socialIconDiv' onClick={onGoogleClick}>\n        <img className='socialIconImg' src={googleIcon} alt='google' />\n      </button>\n    </div>\n  )\n}\n\nexport default OAuth\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,OAAO,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAC5E,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,eAAe,QAAQ,oBAAoB;AACzE,SAASC,EAAE,QAAQ,oBAAoB;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AAAA,OAAAC,UAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGtC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,IAAI,GAAGjB,OAAO,CAAC,CAAC;MACtB,MAAMkB,QAAQ,GAAG,IAAIhB,kBAAkB,CAAC,CAAC;MACzC,MAAMiB,MAAM,GAAG,MAAMlB,eAAe,CAACgB,IAAI,EAAEC,QAAQ,CAAC;MACpD,MAAME,IAAI,GAAGD,MAAM,CAACC,IAAI;;MAExB;MACA,MAAMC,MAAM,GAAGlB,GAAG,CAACI,EAAE,EAAE,OAAO,EAAEa,IAAI,CAACE,GAAG,CAAC;MACzC,MAAMC,OAAO,GAAG,MAAMlB,MAAM,CAACgB,MAAM,CAAC;;MAEpC;MACA,IAAI,CAACE,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QACrB,MAAMpB,MAAM,CAACD,GAAG,CAACI,EAAE,EAAE,OAAO,EAAEa,IAAI,CAACE,GAAG,CAAC,EAAE;UACvCG,IAAI,EAAEL,IAAI,CAACM,WAAW;UACtBC,KAAK,EAAEP,IAAI,CAACO,KAAK;UACjBC,SAAS,EAAEtB,eAAe,CAAC;QAC7B,CAAC,CAAC;MACJ;MACAQ,QAAQ,CAAC,GAAG,CAAC;IACf,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdrB,KAAK,CAACqB,KAAK,CAAC,iCAAiC,CAAC;IAChD;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BpB,OAAA;MAAAoB,QAAA,GAAG,OAAK,EAAChB,QAAQ,CAACiB,QAAQ,KAAK,UAAU,GAAG,IAAI,GAAG,IAAI,EAAC,QAAM;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClEzB,OAAA;MAAQmB,SAAS,EAAC,eAAe;MAACO,OAAO,EAAErB,aAAc;MAAAe,QAAA,eACvDpB,OAAA;QAAKmB,SAAS,EAAC,eAAe;QAACQ,GAAG,EAAE7B,UAAW;QAAC8B,GAAG,EAAC;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACvB,EAAA,CArCQD,KAAK;EAAA,QACKb,WAAW,EACXD,WAAW;AAAA;AAAA0C,EAAA,GAFrB5B,KAAK;AAuCd,eAAeA,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}